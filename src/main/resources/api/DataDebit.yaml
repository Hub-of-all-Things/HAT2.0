swagger: '2.0'
info:
  version: 2.0.0
  title: HAT 2.0 API
host: api.hubofallthings.com
schemes:
  - http
basePath: /api
consumes:
  - application/json
produces:
  - application/json
paths:

  /DataDebit:
    post:
      description: |
        Creates a new Data Debit for allowing outside access to a bundle
      parameters:
        - name: DataDebit
          in: body
          description: Table information to be inserted
          required: true
          schema:
            $ref: '#/definitions/DataDebit'
      tags:
        - DataDebit
      responses:
        '201':
          description: Table has been created
          schema:
            $ref: '#/definitions/DataDebitResponse'

        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

/DataDebit/{dataDebitKey}/values:
    get:
      description: |
        Retrieves all data associated with the Data Debit
      parameters:
        - name: dataDebitKey
          in: path
          description: dataDebitKey
          required: true
          type: text
          format: UUID
      tags:
        - DataDebit
      responses:
        '200':
          description: A list of values.
          schema:
            $ref: '#/definitions/DataDebitValues'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

/EnableDataDebit/{dataDebitKey}:
    get:
      description: |
       Enables a data debit for a given key
      parameters:
        - name: dataDebitKey
          in: path
          description: Data Debit Key
          required: true
          type: text
          format: UUID
      tags:
        - DataDebit
      responses:
        '200':
          description: Data Debit has been enabled
          schema:
            $ref: '#/definitions/EnableDataDebit'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
/DisableDataDebit/{dataDebitKey}:
    get:
      description: |
        Disables a data debit for a given key
      parameters:
        - name: dataDebitKey
          in: path
          description: Data Debit Key
          required: true
          type: text
          format: UUID
      tags:
        - DataDebit
      responses:
        '200':
          description: Data Debit has been disabled
          schema:
            $ref: '#/definitions/DisableDataDebit'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

definitions:
  TimeStructure:
    properties:
      dateCreated:
        type: string
        format: date-time
        description: Time the entity was created
        example: "2015-08-16T21:45:22.551Z"
      lastUpdated:
        type: string
        format: date-time
        description: Time the entity was last updated
        example: "2015-08-16T21:45:22.551Z"
    required:
      - dateCreated
      - lastUpdated

  DataDebit:
    required:
      - name
      - startDate
      - endDate
      - rolling
      - sell
      - price
      - owner
      - user

    properties:
    dataDebitKey:
          type: text
          description: dataDebitKey
    name:
        type: string
        description: Name of the data debit
        example: Going to work bundle data debit
    startDate:
        type: datetime
        description: Starting date of data debit
    endDate:
        type: datetime
        description: Ending date of data debit
    rolling:
        type: boolean
        description: Is the data debit on a monthly rolling contract
    sell:
        type: boolean
        description: Is the data debit for renting or selling
    price: 
        type: real
        description: Price the Data is being exchanged for
    owner:
        type: UUID
        description: Owner of the Data Debit
    user:
        type: UUID
        description: Recipient of the Data Debit
        
        
  DataDebitValues:
    allOf:
    - $ref: '#/definitions/DataDebitResponse'
    - properties:
        tables:
          type: array
          description: "Get bundle Contextless or contextual values for bundle ID linked to Data Debit Key"
          items:
            $ref: '#/definitions/BundleContextlessValues'
            $ref: '#/definitions/BundleContextValues'
    
  DataDebitResponse:
    required:
      - name
    allOf:
    - $ref: '#/definitions/Record'
    - $ref: '#/definitions/TimeStructure'

      
  EnableDataDebit:
    required:
      - dataDebitKey
    properties:
        dataDebitKey:
          type: text
          description: dataDebitKey

  DisableDataDebit:
    required:  
    - dataDebitKey

    properties:
        dataDebitKey:
          type: text
          description: dataDebitKey

  Error:
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      fields:
        type: string