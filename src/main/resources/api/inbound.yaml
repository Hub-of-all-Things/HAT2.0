# Example YAML to get you started quickly.
# Be aware that YAML has indentation based scoping.
# Code completion support is available so start typing for available options.
swagger: '2.0'

# This is your document metadata
info:
  version: "2.0.0"
  title: HAT 2.0 Inbound API

host:
  api.hubofallthings.com
schemes:
  - http
basePath: /inbound
consumes:
  - application/json
produces:
  - application/json

# Describe your paths here
paths:
  # This is a path endpoint. Change it.
  /table:
    post:
      description: |
        Creates a new virtual table for storing arbitrary incoming data
      parameters:
        - name: Table
          in: body
          description: Table information to be inserted
          required: true
          schema:
            $ref: '#/definitions/Table'
      tags:
        - Tables
        - Setup
      responses:
        201:
          description: Table has been created
          schema:
            $ref: '#/definitions/Table'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

  /table/{parentId}/addTable/{childId}:
    post:
      description: |
        Marks provided table as a "child" of another, e.g. to created nested data structured
      parameters:
        - name: parentId
          in: path
          description: the "parent" table to add the provided "child" table within
          required: true
          type: number
          format: integer
        - name: childId
          in: path
          description: the "child" table ID
          required: true
          type: number
          format: integer
      tags:
        - Tables
        - Setup
      responses:
        201:
          description: Tables have been linked. Returns ID of the crossreference
          schema:
            $ref: '#/definitions/EntityCreated'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

  /field:
    post:
      description: |
        Create a new field in a virtual table
      parameters:
        - name: Field
          in: body
          description: Information about the field to be inserted
          required: true
          schema:
            $ref: '#/definitions/Field'
      tags:
        - Fields
        - Setup
      responses:
        201:
          description: Field has been created
          schema:
            $ref: '#/definitions/Field'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

  /record:
    post:
      description: |
        Create a new record to connect data values together
      parameters:
        - name: Record
          in: body
          description: Record information -- only name should be set
          required: true
          schema:
            $ref: '#/definitions/Record'
      tags:
        - Records
        - Setup
        - Storage
      responses:
        201:
          description: Record has been created
          schema:
            $ref: '#/definitions/Record'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

  /value:
    post:
      description: |
        Store a new data value, associated with a database field and a record
      parameters:
        - name: Value
          in: body
          description: Information about a single value to be inserted in the database
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/Value'
      tags:
        - Values
        - Storage
      responses:
        201:
          description: Data Value has been saved
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

  /value/list:
    post:
      description: |
        Store a list of values, all with its own information of what it is associated with
      parameters:
        - name: Value
          in: body
          description: Information about a single value to be inserted in the database
          required: true
          schema:
            $ref: '#/definitions/Value'
      tags:
        - Values
        - Storage
      responses:
        201:
          description: Data Value has been saved
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

definitions:
  Table:
    properties:
      id:
        type: number
        description: Unique Table ID

      name:
        type: string
        description: Name of the table
      source:
        type: string
        description: Name of the source

  Record:
    properties:
      id:
        type: number
        description: Unique data record ID, connecting tables and records in a single received record
      name:
        type: string
        description: Name of the record

  Field:
    properties:
      id:
        type: number
        description: Unique Field ID
      tableId:
        type: number
        description: ID of the table the field is part of
      name:
        type: string
        description: name of the field (column name in the database)

  Value:
    properties:
      id:
        type: number
        description: Unique data value ID
      value:
        type: string
        description: An arbitrary data value to be stored
      fieldId:
        type: number
        description: Which field (column) the value is in
      recordId:
        type: number
        description: ID of the record the value is part of

  EntityCreated:
    properties:
      id:
        type: number
        description: ID of the creatd entity

  Error:
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      fields:
        type: string