{"version":3,"sources":["features/hat-setup-login/HatSetupLoginParamValidation.tsx","features/hat-setup-login/HatSetupLoginHmiActions.tsx","features/hat-setup-login/HatSetupLoginHmi.tsx","features/hat-setup-login/HatSetupLoginRedirectError.tsx","features/hat-setup-login/HatSetupApplicationHandler.tsx","features/hat-setup-login/HatSetupLoginBuildRedirect.tsx","features/hat-setup-login/HatSetupLoginSetupDependency.tsx","features/hat-setup-login/HatSetupLogin.tsx"],"names":["HatSetupLoginParamValidation","props","dispatch","useDispatch","useEffect","name","getParameterByName","toLowerCase","redirect","getApplicationsHmi","setRedirectError","children","HatSetupLoginHmiActions","parentApp","useSelector","selectParentApp","HmiActions","registrationType","HmiType","daas","nextStep","onTermsAgreed","application","id","cancelStep","onTermsDeclined","HatSetupLoginHmi","setup","LoadingSpinner","loadingText","Hmi","hmiType","HatSetupLoginRedirectError","redirectError","selectRedirectError","callBackUrlWithError","error","errorReason","replace","fallback","internal","window","location","href","HatSetupLoginApplicationHandler","applications","selectApplications","length","parentAppId","find","app","kind","parentDependencies","dependencies","setParentApp","setDependencyApps","filter","indexOf","HatSetupLoginBuildRedirect","dependencyApps","selectDependencyApps","buildRedirect","a","hatSvc","HatClientService","getInstance","appLogin","resAppLogin","parsedBody","accessToken","url","iosUrl","androidUrl","testingUrl","includes","decodeURI","console","warn","sendReport","finally","environment","sandbox","every","enabled","HatSetupLoginSetupDependency","setupAppDependencies","d","callback","intermediateCallBackUrl","setupApplication","res","log","appId","split","dependencyArray","item","join","map","HatSetupLogin"],"mappings":"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","file":"static/js/hat_setup_login.b4abdfca.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\nimport { getApplicationsHmi } from \"../applications/applicationsSlice\";\nimport { useDispatch } from \"react-redux\";\nimport { setRedirectError } from \"./hatSetupLoginSlice\";\nimport { getParameterByName } from \"../../utils/query-params\";\n\ntype Props = {\n    children: React.ReactNode;\n}\nexport const HatSetupLoginParamValidation: React.FC<Props> = props => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const name = getParameterByName('name')?.toLowerCase();\n    const redirect = getParameterByName('redirect');\n\n    if (!name) {\n      dispatch(setRedirectError('application_misconfigured', 'name_is_required '));\n      return;\n    }\n\n    if (!redirect) {\n      dispatch(setRedirectError('application_misconfigured', 'redirect_is_required '));\n      return;\n    }\n\n    dispatch(getApplicationsHmi(name));\n\n  }, [dispatch]);\n\n  return <>{props.children}</>;\n};\n","import React from \"react\";\nimport { HmiType } from \"../hmi/hmi.interface\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { onTermsAgreed, onTermsDeclined } from \"./hatSetupLoginSlice\";\nimport { selectParentApp } from \"../hmi/hmiSlice\";\nimport { HmiActions } from \"../hmi/HmiActions\";\n\nexport const HatSetupLoginHmiActions: React.FC = () => {\n  const dispatch = useDispatch();\n  const parentApp = useSelector(selectParentApp);\n\n  return (\n    <>\n      <HmiActions\n        registrationType={HmiType.daas}\n        nextStep={() => dispatch(onTermsAgreed(parentApp?.application.id || ''))}\n        cancelStep={() => dispatch(onTermsDeclined())}\n      />\n    </>\n  );\n};\n","import React from \"react\";\nimport { HmiType } from \"../hmi/hmi.interface\";\nimport { HatSetupLoginHmiActions } from \"./HatSetupLoginHmiActions\";\nimport { useSelector } from \"react-redux\";\nimport { selectParentApp } from \"../hmi/hmiSlice\";\nimport { Hmi } from \"../hmi/Hmi\";\nimport { LoadingSpinner } from \"../../components/LoadingSpinner/LoadingSpinner\";\n\nexport const HatSetupLoginHmi: React.FC = () => {\n  const parentApp = useSelector(selectParentApp);\n\n  if (!parentApp || parentApp.setup) return <LoadingSpinner loadingText={'Loading permissions'}/>;\n\n  return (\n    <div>\n      <Hmi hmiType={HmiType.daas} />\n      <HatSetupLoginHmiActions />\n    </div>\n  );\n};\n","import React, { useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { selectRedirectError } from \"./hatSetupLoginSlice\";\nimport { getParameterByName } from \"../../utils/query-params\";\n\ntype Props = {\n    children: React.ReactNode;\n}\nexport const HatSetupLoginRedirectError: React.FC<Props> = props => {\n  const redirectError = useSelector(selectRedirectError);\n\n  useEffect(() => {\n    const callBackUrlWithError = (error: string, errorReason: string): string => {\n      const redirect = getParameterByName('redirect') || getParameterByName('fallback');\n\n      const url = `${ redirect }?error=${ error }%26error_reason=${ errorReason }`;\n\n      return url.replace('#', '%23');\n    };\n\n    if (redirectError && redirectError.error) {\n      const fallback = getParameterByName('fallback');\n      const internal = getParameterByName('internal') === 'true';\n\n      if (internal) {\n        window.location.href = fallback || callBackUrlWithError(redirectError.error, redirectError.errorReason);\n      } else {\n        window.location.href = callBackUrlWithError(redirectError.error, redirectError.errorReason);\n      }\n    }\n  }, [redirectError]);\n\n  return <>{props.children}</>;\n};\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectApplications } from \"../applications/applicationsSlice\";\nimport { getParameterByName } from \"../../utils/query-params\";\nimport { setRedirectError } from \"./hatSetupLoginSlice\";\nimport { setDependencyApps, setParentApp } from \"../hmi/hmiSlice\";\n\ntype Props = {\n    children: React.ReactNode;\n}\nexport const HatSetupLoginApplicationHandler: React.FC<Props> = props => {\n  const applications = useSelector(selectApplications);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (applications && applications.length > 0) {\n      const parentAppId = getParameterByName(\"name\");\n      const parentApp = applications.find(app => app.application.id === parentAppId);\n\n      if (!parentApp || parentApp.application.kind.kind !== 'App') {\n        dispatch(setRedirectError('application_misconfigured', 'application_id_not_found '));\n        return;\n      }\n\n      const parentDependencies = parentApp.application.setup.dependencies || [];\n\n      dispatch(setParentApp(parentApp));\n      dispatch(setDependencyApps(applications.filter(app => parentDependencies.indexOf(app.application.id) > -1)));\n    }\n  }, [applications, dispatch]);\n\n  return <>{props.children}</>;\n};\n","import React, { useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { getParameterByName } from \"../../utils/query-params\";\nimport { HatApplication } from \"@dataswift/hat-js/lib/interfaces/hat-application.interface\";\nimport { HatClientService } from \"../../services/HatClientService\";\nimport { environment } from \"../../environment\";\nimport { selectDependencyApps, selectParentApp } from \"../hmi/hmiSlice\";\n\ntype Props = {\n    children: React.ReactNode;\n}\n\nexport const HatSetupLoginBuildRedirect: React.FC<Props> = props => {\n  const parentApp = useSelector(selectParentApp);\n  const dependencyApps = useSelector(selectDependencyApps);\n\n  useEffect(() => {\n    const buildRedirect = async (app: HatApplication) => {\n      // Use internal login option when forcing HAT-native version through terms approval process\n      const internal = getParameterByName('internal') === 'true';\n      const redirect = getParameterByName('redirect');\n\n      if (internal) {\n        window.location.href = redirect || '';\n      } else {\n        const hatSvc = HatClientService.getInstance();\n\n        try {\n          const resAppLogin = await hatSvc.appLogin(app.application.id);\n\n          if (resAppLogin?.parsedBody?.accessToken) {\n            const { accessToken } = resAppLogin.parsedBody;\n            const setup = app.application.setup;\n\n            const isRedirectUrlValid = [setup.url, setup.iosUrl, setup.androidUrl, setup.testingUrl].includes(\n              decodeURI(redirect || '')\n            );\n\n            if (isRedirectUrlValid) {\n              // eslint-disable-next-line max-len\n              window.location.href = `${ redirect }${ (redirect?.indexOf('?') !== -1) ? '&' : '?' }token=${ accessToken }`;\n            } else {\n              console.warn('Provided URL is not registered');\n\n              hatSvc.sendReport('hmi_invalid_redirect_url', `${ app.application.id }: ${ redirect }`).finally(() => {\n                if (environment.sandbox) {\n                  // eslint-disable-next-line max-len\n                  window.location.href = `${ redirect }${ (redirect?.indexOf('?') !== -1) ? '&' : '?' }token=${ accessToken }`;\n                } else {\n                  // eslint-disable-next-line max-len\n                  window.location.href = `${ redirect }${ (redirect?.indexOf('?') !== -1) ? '&' : '?' }error=access_denied&error_reason=hmi_invalid_redirect_url`;\n                }\n              });\n            }\n          }\n        } catch (e) {}\n      }\n    };\n\n    if (parentApp && parentApp.setup && dependencyApps.every(app => app.enabled === true)) {\n      buildRedirect(parentApp);\n    }\n  }, [parentApp, dependencyApps]);\n\n  return <>{props.children}</>;\n};\n","import React, { useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { getParameterByName } from \"../../utils/query-params\";\nimport { HatApplication } from \"@dataswift/hat-js/lib/interfaces/hat-application.interface\";\nimport { HatClientService } from \"../../services/HatClientService\";\nimport { selectDependencyApps, selectParentApp } from \"../hmi/hmiSlice\";\n\ntype Props = {\n    children: React.ReactNode;\n}\n\nexport const HatSetupLoginSetupDependency: React.FC<Props> = props => {\n  const parentApp = useSelector(selectParentApp);\n  const dependencyApps = useSelector(selectDependencyApps);\n\n  useEffect(() => {\n    const setupAppDependencies = async (dependencies: HatApplication[]) => {\n      const app = dependencies.filter(d => !d.enabled)[0];\n      const callback = intermediateCallBackUrl(app.application.id);\n\n      try {\n        const hatSvc = HatClientService.getInstance();\n        const res = await hatSvc.setupApplication(app.application.id);\n\n        if (res?.parsedBody) {\n          const resAppLogin = await hatSvc.appLogin(app.application.id);\n\n          if (resAppLogin?.parsedBody?.accessToken) {\n            // eslint-disable-next-line max-len\n            window.location.href = `${ app.application.setup.url }?token=${ resAppLogin.parsedBody.accessToken }&redirect=${ callback }`;\n          }\n        }\n      } catch (e) {\n        console.log('Setup dependencies errored', e);\n      }\n    };\n\n    const intermediateCallBackUrl = (appId?: string): string => {\n      let url = window.location.href.split('?')[0];\n      const name = getParameterByName('name')?.toLowerCase();\n      const redirect = getParameterByName('redirect');\n      const dependencies = getParameterByName('dependencies');\n\n      url += `?name=${ name }%26redirect=${ redirect }`;\n\n      if (dependencies) {\n        // removes the application id from the dependency parameter\n        const dependencyArray = dependencies.split(',').filter(item => item !== appId);\n        if (dependencyArray && dependencyArray.length > 0) {\n          url += `%26dependencies=${ dependencyArray.join() }`;\n        }\n      } else {\n        if (dependencyApps) {\n          const dependencyArray = dependencyApps\n            .filter(app => app.application.id !== appId)\n            .map(app => app.application.id);\n          if (dependencyArray && dependencyArray.length > 0) {\n            url += `%26dependencies=${ dependencyArray.join() }`;\n          }\n        }\n      }\n\n      return url.replace('#', '%23');\n    };\n\n    if (parentApp && parentApp.setup && !dependencyApps.every(app => app.enabled === true)) {\n      setupAppDependencies(dependencyApps);\n    }\n  }, [parentApp, dependencyApps]);\n\n  return <>{props.children}</>;\n};\n","import React from \"react\";\nimport { HatSetupLoginParamValidation } from \"./HatSetupLoginParamValidation\";\nimport { HatSetupLoginHmi } from \"./HatSetupLoginHmi\";\nimport { HatSetupLoginRedirectError } from \"./HatSetupLoginRedirectError\";\nimport { HatSetupLoginApplicationHandler } from \"./HatSetupApplicationHandler\";\nimport { HatSetupLoginBuildRedirect } from \"./HatSetupLoginBuildRedirect\";\nimport { HatSetupLoginSetupDependency } from \"./HatSetupLoginSetupDependency\";\n\nconst HatSetupLogin: React.FC = () => {\n  return (\n    <HatSetupLoginParamValidation>\n      <HatSetupLoginApplicationHandler>\n        <HatSetupLoginBuildRedirect>\n          <HatSetupLoginSetupDependency>\n            <HatSetupLoginRedirectError>\n              <HatSetupLoginHmi />\n            </HatSetupLoginRedirectError>\n          </HatSetupLoginSetupDependency>\n        </HatSetupLoginBuildRedirect>\n      </HatSetupLoginApplicationHandler>\n    </HatSetupLoginParamValidation>\n  );\n};\n\nexport default HatSetupLogin;\n"],"sourceRoot":""}