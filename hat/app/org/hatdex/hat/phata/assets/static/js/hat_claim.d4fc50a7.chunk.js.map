{"version":3,"sources":["components/banners/NotificationBanner/NotificationBanner.tsx","../node_modules/lodash.debounce/index.js","features/hat-claim/HatClaimActions/HatClaimActions.tsx","features/hat-claim/messages-hat-claim.ts","features/hat-claim/redux/actions/hatClaimActions.ts","features/hat-claim/HatClaimEmail/HatClaimEmail.tsx","features/hat-claim/HatClaimUrl/HatClaimUrl.tsx","components/PasswordStrengthMeter/PasswordStrengthMeter.tsx","features/hat-claim/HatClaimPassword/HatClaimPassword.tsx","features/hat-claim/HatClaimConfirmation/HatClaimConfirmation.tsx","utils/validations.ts","features/hat-claim/hat-claim.service.ts","features/hat-claim/HatClaimSuccess/HatClaimSuccess.tsx","features/hat-claim/HatClaim/HatClaim.tsx","utils/load-dynamic-zxcvbn.js","utils/query-params.ts","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","assets/images/hat-data-rights.png"],"names":["NotificationBanner","notification","this","props","className","type","message","Component","reTrim","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","freeGlobal","global","Object","freeSelf","self","root","Function","objectToString","prototype","toString","nativeMax","Math","max","nativeMin","min","now","Date","isObject","value","toNumber","isObjectLike","call","isSymbol","other","valueOf","replace","isBinary","test","slice","module","exports","func","wait","options","lastArgs","lastThis","maxWait","result","timerId","lastCallTime","lastInvokeTime","leading","maxing","trailing","TypeError","invokeFunc","time","args","thisArg","undefined","apply","leadingEdge","setTimeout","timerExpired","shouldInvoke","timeSinceLastCall","trailingEdge","remainingWait","debounced","isInvoking","arguments","cancel","clearTimeout","flush","HatClaimActions","onClick","setCurrentStep","currentStep","style","textAlign","marginTop","href","rel","target","hatClaimMessages","editHatClaim","name","ReduxActionTypes","EDIT_HAT_CLAIM","step","EDIT_CURRENT_STEP","editHatClaimPassword","EDIT_HAT_PASSWORD","editHatClaimErrorMessage","EDIT_HAT_CLAIM_ERROR_MSG","connect","state","hatClaim","dispatch","bindActionCreators","placeholder","disabled","email","htmlFor","id","checked","optins","onChange","event","hatName","hatCluster","PasswordStrengthMeter","createPasswordLabel","getPasswordStrengthProgress","progress","passwordStrength","score","debounce","require","password","useState","hide1","setHide1","hide2","setHide2","validatePasswordDebounce","p","zxcvbn","validatePassword","passwordMatchDebounce","passwordIsValid","passwordConfirm","newPassword","length","useEffect","autoComplete","hidden","e","tabIndex","HatClaimUrlConfirmation","EMAIL_REGEX","buildClaimRequest","claim","termsAgreed","claimHat","claimToken","body","a","method","JSON","stringify","headers","jsonContentHeader","post","mHeaders","Headers","append","src","alt","hatDRLogo","errorMsg","useParams","nextStep","parsedBody","changeStep","getParameterByName","host","window","location","hostname","substring","indexOf","callback","existingScript","document","getElementById","script","createElement","async","appendChild","onload","loadDynamicZxcvbn","newStep","handleSubmission","goToLogin","variable","vars","search","split","i","pair","decodeURIComponent","_slicedToArray","arr","Array","isArray","Symbol","iterator","_arr","_n","_d","_e","_s","_i","next","done","push","err","unsupportedIterableToArray"],"mappings":"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","file":"static/js/hat_claim.d4fc50a7.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './NotificationBanner.scss';\n\nexport class NotificationBanner extends Component<INotificationBanner> {\n  render() {\n    const notification = this.props;\n\n    return (\n      <div>\n        {notification && (\n          <>\n            <div className={`notification-banner-container notification-banner-container-${ notification.type }`}>\n              {notification.type === 'error' && (\n                <i className=\"material-icons notification-banner-container-icon\">warning</i>\n              )}\n              {notification.message}\n            </div>\n          </>\n        )}\n      </div>\n    );\n  }\n}\n\ninterface INotificationBanner {\n  type: string;\n  message: string;\n}\n","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        result = wait - timeSinceLastCall;\n\n    return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = debounce;\n","import React from 'react';\nimport './HatClaimActions.scss';\n\ninterface Props {\n  currentStep: number;\n  setCurrentStep: (newStep: number) => void;\n}\n\nconst HatClaimActions: React.FC<Props> = props => {\n  return (\n    <div className=\"hat-claim-actions flex-column-wrapper flex-align-items-center\">\n      <button className={'btn btn-accent'} onClick={() => props.setCurrentStep(props.currentStep + 1)}>\n        {props.currentStep === 3 ? 'Confirm' : props.currentStep === 5 ? 'login' : 'Next'}\n      </button>\n      {props.currentStep !== 0 && props.currentStep !== 3 && props.currentStep !== 5 && (\n        <button className={'btn btn-transparent'} onClick={() => props.setCurrentStep(props.currentStep - 1)}>\n          Previous\n        </button>\n      )}\n\n      {props.currentStep === 3 && (\n        <div className=\"text-small\" style={{ textAlign: 'center', marginTop: '1.8rem' }}>\n          By selecting 'Confirm', I agree to the Dataswift&nbsp;\n          <a\n            href=\"https://cdn.dataswift.io/legal/hat-owner-terms-of-service.pdf\"\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n          >\n            Terms of Service\n          </a>\n          &nbsp; and{' '}\n          <a\n            href=\"https://cdn.dataswift.io/legal/dataswift-privacy-policy.pdf\"\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n          >\n            Privacy Policy\n          </a>\n          .\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default HatClaimActions;\n","export const hatClaimMessages: hatClaimMessages = {\n  claimYourHat: 'Claim your HAT',\n  informationOnlyUsed:\n  // eslint-disable-next-line max-len\n    'This information is only used to create your HAT Microserver. Your personal information will never be shared with anyone unless you authorise it.',\n  subscribeMadHatters: 'Subscribe to MadHATTERs (Tech news, HAT slanted)',\n  yourHatUrl: 'Your HAT URL',\n  hatUrlDescription:\n    \"This is your HAT Microserver URL. After clicking 'Next' you will be able to choose your password.\",\n  choosePassword: 'Choose your password',\n  dataPrecious: 'Your data is precious - keep it safe with a password that is Strong or Very Strong.',\n  yourHatMicroserver: 'Your HAT Microserver',\n  claiming100mbStorage: 'You are claiming a HAT Microserver with 100MB storage.',\n};\n\ninterface hatClaimMessages {\n  claimYourHat: string;\n  informationOnlyUsed: string;\n  subscribeMadHatters: string;\n  yourHatUrl: string;\n  hatUrlDescription: string;\n  choosePassword: string;\n  dataPrecious: string;\n  yourHatMicroserver: string;\n  claiming100mbStorage: string;\n}\n","import { ReduxActionTypes, ReduxBaseAction } from '../../../../redux/actions/rootActions';\n\nexport interface ReduxEditHatClaimAction extends ReduxBaseAction {\n  name: string;\n  value: string | boolean;\n}\n\nexport interface ReduxEditPasswordHatClaimAction extends ReduxBaseAction {\n  name: string;\n  value: string | boolean | object;\n}\n\nexport interface ReduxEditErrorMsgHatClaimAction extends ReduxBaseAction {\n  message: string;\n}\n\nexport interface ReduxEdiCurrentStepHatClaimAction extends ReduxBaseAction {\n  step: number;\n}\n\nexport function editHatClaim(name: string, value: string | boolean): ReduxEditHatClaimAction {\n  return {\n    type: ReduxActionTypes.EDIT_HAT_CLAIM,\n    name,\n    value,\n  };\n}\n\nexport function setCurrentStep(step: number): ReduxEdiCurrentStepHatClaimAction {\n  return {\n    type: ReduxActionTypes.EDIT_CURRENT_STEP,\n    step,\n  };\n}\n\nexport function editHatClaimPassword(name: string, value: string | boolean | object): ReduxEditPasswordHatClaimAction {\n  return {\n    type: ReduxActionTypes.EDIT_HAT_PASSWORD,\n    name,\n    value,\n  };\n}\n\nexport function editHatClaimErrorMessage(message: string): ReduxEditErrorMsgHatClaimAction {\n  return {\n    type: ReduxActionTypes.EDIT_HAT_CLAIM_ERROR_MSG,\n    message,\n  };\n}\n","import React from 'react';\nimport './HatClaimEmail.scss';\nimport { hatClaimMessages } from '../messages-hat-claim';\nimport { AppState } from '../../../redux/reducer/rootReducer';\nimport { AnyAction, bindActionCreators, Dispatch } from 'redux';\nimport { editHatClaim } from '../redux/actions/hatClaimActions';\nimport { connect } from 'react-redux';\n\ntype Props = ReturnType<typeof mapStateToProps> & ReturnType<typeof mapDispatchToProps>;\n\nconst HatClaimEmail: React.FC<Props> = props => {\n  if (props.currentStep !== 0) {\n    return null;\n  }\n  return (\n    <div className=\"hat-claim-email flex-column-wrapper flex-content-center flex-align-items-center\">\n      <h2>{hatClaimMessages.claimYourHat}</h2>\n      <div className={'text-medium'}>{hatClaimMessages.informationOnlyUsed}</div>\n      <input\n        placeholder={'email'}\n        type={'email'}\n        disabled={true}\n        value={props.hatClaim.email || 'Unspecified email address'}\n      />\n      <div className={'checkbox-container'}>\n        <label className={'text-medium'} htmlFor={'newsletterOptin'}>\n          {hatClaimMessages.subscribeMadHatters}\n          <input\n            id={'newsletterOptin'}\n            name={'newsletterOptin'}\n            type={'checkbox'}\n            checked={props.hatClaim.optins}\n            onChange={event => props.editHatClaim('optins', event.target.checked)}\n          />\n          <span className=\"checkbox-checkmark\" />\n        </label>\n      </div>\n      <div className={'text-small text-align-left'}>\n        You can change your mind at any time by clicking the unsubscribe link in the footer of any email you receive\n        from us. Learn how we treat your information with respect in our&nbsp;\n        <a\n          href={'https://cdn.dataswift.io/legal/dataswift-privacy-policy.pdf'}\n          target={'_blank'}\n          rel=\"noopener noreferrer\"\n        >\n          privacy policy.\n        </a>\n        &nbsp; By clicking ‘Next’ you agree to have read the privacy policy.\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: AppState) => ({\n  hatClaim: state.hatClaim.hatClaim,\n  currentStep: state.hatClaim.currentStep,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch<AnyAction>) =>\n  bindActionCreators(\n    {\n      editHatClaim,\n    },\n    dispatch\n  );\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HatClaimEmail);\n","import React from 'react';\nimport './HatClaimUrl.scss';\nimport { hatClaimMessages } from '../messages-hat-claim';\nimport { AppState } from '../../../redux/reducer/rootReducer';\nimport { AnyAction, bindActionCreators, Dispatch } from 'redux';\nimport { editHatClaim } from '../redux/actions/hatClaimActions';\nimport { connect } from 'react-redux';\n\ntype Props = ReturnType<typeof mapStateToProps> & ReturnType<typeof mapDispatchToProps>;\n\nconst HatClaimUrl: React.FC<Props> = props => {\n  if (props.currentStep !== 1) {\n    return null;\n  }\n\n  return (\n    <div className=\"hat-claim-url flex-column-wrapper flex-content-center flex-align-items-center\">\n      <h2>{hatClaimMessages.yourHatUrl}</h2>\n      <div className=\"title-hat-domain-wrapper\">\n        <div className=\"hat-name\">\n          <h3>{props.hatClaim.hatName}</h3>\n        </div>\n        <div className=\"hat-domain\">\n          <h3>.{props.hatClaim.hatCluster}</h3>\n        </div>\n      </div>\n      <div className={'text-medium'}>{hatClaimMessages.hatUrlDescription}</div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: AppState) => ({\n  hatClaim: state.hatClaim.hatClaim,\n  currentStep: state.hatClaim.currentStep,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch<AnyAction>) =>\n  bindActionCreators(\n    {\n      editHatClaim,\n    },\n    dispatch\n  );\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HatClaimUrl);\n","import React, { Component, ReactNode } from 'react';\nimport './PasswordStrengthMeter.scss';\n\nexport class PasswordStrengthMeter extends Component<IPasswordStrengthProps> {\n  createPasswordLabel = (result: number) => {\n    switch (result) {\n      case 0:\n        return 'Too weak';\n      case 1:\n        return 'Too weak';\n      case 2:\n        return 'So-so';\n      case 3:\n        return 'Strong';\n      case 4:\n        return 'Very Strong';\n      default:\n        return '';\n    }\n  };\n\n  getPasswordStrengthProgress = (progress: number) => {\n    if (progress <= 1) {\n      return 1;\n    } else if (progress === 2) {\n      return 2;\n    } else {\n      return 4;\n    }\n  };\n\n  render(): ReactNode {\n    const passwordStrength = this.props.passwordStrength;\n    return (\n      <div className=\"password-strength-meter\">\n        {passwordStrength && (\n          <>\n            <progress\n              className={`password-strength-meter-progress strength-${ passwordStrength.score }`}\n              value={this.getPasswordStrengthProgress(passwordStrength.score)}\n              max=\"4\"\n            />\n            <br />\n\n            <div className={`password-strength-meter-label text-strength-${ passwordStrength.score }`}>\n              {this.createPasswordLabel(passwordStrength.score)}\n            </div>\n          </>\n        )}\n      </div>\n    );\n  }\n}\n\ninterface IPasswordStrengthProps {\n  passwordStrength: IPasswordStrength;\n}\n\nexport interface IPasswordStrength {\n  score: number;\n}\n","import React, { useEffect, useState } from 'react';\nimport './HatClaimPassword.scss';\nimport { hatClaimMessages } from '../messages-hat-claim';\nimport { AppState } from '../../../redux/reducer/rootReducer';\nimport { AnyAction, bindActionCreators, Dispatch } from 'redux';\nimport { editHatClaim, editHatClaimErrorMessage, editHatClaimPassword } from '../redux/actions/hatClaimActions';\nimport { connect } from 'react-redux';\nimport { PasswordStrengthMeter } from \"../../../components/PasswordStrengthMeter/PasswordStrengthMeter\";\nconst debounce = require('lodash.debounce');\ndeclare const zxcvbn: any;\n\ntype Props = ReturnType<typeof mapStateToProps> & ReturnType<typeof mapDispatchToProps>;\n\nconst HatClaimPassword: React.FC<Props> = props => {\n  const [hide1, setHide1] = useState(true);\n  const [hide2, setHide2] = useState(true);\n\n  const validatePasswordDebounce = debounce((p: string) => validatePassword(p), 400);\n\n  const passwordMatchDebounce = debounce(\n    () => passwordIsValid(props.password.password, props.password.passwordConfirm),\n    400\n  );\n\n  function validatePassword(password: string) {\n    const score = zxcvbn(password).score;\n    props.editHatClaimPassword('passwordStrength', { score: score });\n  }\n\n  const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = event.target;\n    props.editHatClaimPassword(name, value);\n\n    if (name === 'password') {\n      validatePasswordDebounce(value);\n      props.editHatClaim(name, value);\n    }\n  };\n\n  const passwordIsValid = (password: string, newPassword: string): boolean => {\n    if (password === newPassword) {\n      if (!(props.password.passwordStrength.score > 2)) {\n        return false;\n      }\n\n      props.editHatClaimErrorMessage('');\n\n      return true;\n    } else {\n      if (newPassword.length > 5) {\n        props.editHatClaimErrorMessage(\"Your passwords don't match!\");\n      }\n\n      return false;\n    }\n  };\n\n  useEffect(() => {\n    passwordMatchDebounce();\n    // eslint-disable-next-line\n  }, [props.password.password, props.password.passwordConfirm]);\n\n  if (props.currentStep !== 2) {\n    return null;\n  }\n\n  return (\n    <div className=\"hat-claim-password flex-column-wrapper flex-content-center flex-align-items-center\">\n      <h2>{hatClaimMessages.choosePassword}</h2>\n      <div className=\"title-hat-domain-wrapper\">\n        <div className=\"hat-name\">\n          <h3>{props.hatClaim.hatName}</h3>\n        </div>\n        <div className=\"hat-domain\">\n          <h3>.{props.hatClaim.hatCluster}</h3>\n        </div>\n      </div>\n      <div className={'text-medium'}>{hatClaimMessages.dataPrecious}</div>\n      <form>\n        <input name={'username'} autoComplete={'username'} type={'text'} hidden={true} />\n\n        <div className=\"input-password-container\">\n          <input\n            type={hide1 ? 'password' : 'text'}\n            name=\"password\"\n            autoComplete={'new-password'}\n            value={props.hatClaim.password}\n            onChange={e => onChange(e)}\n            placeholder=\"Password\"\n          />\n          <button type=\"button\" tabIndex={-1} onClick={() => setHide1(!hide1)}>\n            <i className={'material-icons'}>{hide1 ? ' visibility_off' : ' visibility'}</i>\n          </button>\n        </div>\n        <div className=\"input-password-container\">\n          <input\n            type={hide2 ? 'password' : 'text'}\n            name=\"passwordConfirm\"\n            autoComplete={'new-password'}\n            value={props.password.passwordConfirm}\n            onChange={e => onChange(e)}\n            placeholder=\"Confirm Password\"\n          />\n          <button type=\"button\" tabIndex={-1} onClick={() => setHide2(!hide2)}>\n            <i className={'material-icons'}>{hide2 ? ' visibility_off' : ' visibility'}</i>\n          </button>\n        </div>\n      </form>\n      {props.password.password.length > 0 && (\n        <PasswordStrengthMeter passwordStrength={props.password.passwordStrength} />\n      )}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: AppState) => ({\n  hatClaim: state.hatClaim.hatClaim,\n  currentStep: state.hatClaim.currentStep,\n  password: state.hatClaim.password,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch<AnyAction>) =>\n  bindActionCreators(\n    {\n      editHatClaim,\n      editHatClaimPassword,\n      editHatClaimErrorMessage,\n    },\n    dispatch\n  );\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HatClaimPassword);\n","import React from 'react';\nimport { hatClaimMessages } from '../messages-hat-claim';\n\ninterface Props {\n  currentStep: number;\n}\n\nconst HatClaimUrlConfirmation: React.FC<Props> = props => {\n  if (props.currentStep !== 3) {\n    return null;\n  }\n\n  return (\n    <div className=\"hat-claim-url flex-column-wrapper flex-content-center flex-align-items-center\">\n      <h2>{hatClaimMessages.yourHatMicroserver}</h2>\n      <div className={'text-medium'}>{hatClaimMessages.claiming100mbStorage}</div>\n    </div>\n  );\n};\n\nexport default HatClaimUrlConfirmation;\n","// eslint-disable-next-line max-len\nconst EMAIL_REGEX = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@(([[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\nconst HAT_URL_REGEX = /^[a-z][a-z0-9]{2,19}[a-z0-9]$/;\nconst SPECIAL_CHARS_REGEX = /[_~\\-!\"`¬|:;'#@$£%^&.,*()<>]+/;\nconst NUMBER_FIRST_CHAR_REGEX = /^\\d+/;\n\nconst ERROR_MESSAGES: { [key: string]: string } = {\n  lengthError: 'The username must be between 4 to 21 characters.',\n  uppercaseError: 'The username cannot contain uppercase letters.',\n  specialCharsError: `The username cannot contain special characters. (eg.  - _ # % /)`,\n  mustStartWithLetterError: 'The username must start with a letter.',\n  genericError: `The format of the username is incorrect.`,\n  hatExistsError: 'A HAT with this username already exists.',\n};\n\nexport const isEmail = (email: string): boolean => {\n  return EMAIL_REGEX.test(email);\n};\n\nexport const isHatName = (hatName: string): boolean => {\n  return HAT_URL_REGEX.test(hatName);\n};\n\nexport const isNotEmptyString = (value: string): boolean => {\n  return !!value && value.length > 0;\n};\n\nexport const hatNameErrorMessage = (hatName: string): string => {\n  let errorType = '';\n  if (hatName.length < 4 || hatName.length > 21) {\n    errorType = 'lengthError';\n  } else if (hatName !== hatName.toLowerCase()) {\n    errorType = 'uppercaseError';\n  } else if (hatName.search(SPECIAL_CHARS_REGEX) >= 0) {\n    errorType = `specialCharsError`;\n  } else if (hatName.search(NUMBER_FIRST_CHAR_REGEX) >= 0) {\n    errorType = 'mustStartWithLetterError';\n  } else {\n    errorType = `genericError`;\n  }\n\n  return ERROR_MESSAGES[errorType];\n};\n","import { HatClaim, HatClaimApiResponse, HatClaimRequest } from './hat-claim.interface';\nimport { IHttpResponse, post } from '../../services/BackendService';\n\nconst optins: string[] = ['MadHATTERS', 'HAT Monthly', 'HCF'];\n\nexport const buildClaimRequest = (claim: HatClaim): HatClaimRequest => {\n  return {\n    email: claim.email,\n    termsAgreed: true,\n    optins: claim.optins ? optins : [],\n    hatName: claim.hatName,\n    hatCluster: claim.hatCluster,\n    password: claim.password,\n  };\n};\n\n/*\n  Call Hatters API call through HAT\n */\nexport const claimHat = async (\n  claimToken: string,\n  body: HatClaimRequest\n): Promise<IHttpResponse<HatClaimApiResponse>> => {\n  const args: RequestInit = { method: 'post', body: JSON.stringify(body), headers: jsonContentHeader() };\n\n  return await post<HatClaimApiResponse>(\n    `https://${ body.hatName + '.' + body.hatCluster }/control/v2/auth/claim/complete/${ claimToken }`,\n    body,\n    args\n  );\n};\n\nfunction jsonContentHeader(): Headers {\n  const mHeaders = new Headers();\n\n  mHeaders.append('Content-Type', 'application/json');\n\n  return mHeaders;\n}\n","import React from 'react';\nimport './HatClaimSuccess.scss';\nimport { AppState } from '../../../redux/reducer/rootReducer';\nimport { AnyAction, bindActionCreators, Dispatch } from 'redux';\nimport { editHatClaim } from '../redux/actions/hatClaimActions';\nimport { connect } from 'react-redux';\nimport hatDRLogo from '../../../assets/images/hat-data-rights.png';\n\ntype Props = ReturnType<typeof mapStateToProps> & ReturnType<typeof mapDispatchToProps>;\n\nconst HatClaimSuccess: React.FC<Props> = props => {\n  if (props.currentStep !== 5) {\n    return null;\n  }\n\n  return (\n    <div className=\"hat-claim-success flex-column-wrapper flex-content-center flex-align-items-center\">\n      <h2>Success!</h2>\n      <div className={'text-medium'}>Your HAT Microserver with the following URL has been claimed.</div>\n\n      <div className=\"title-hat-domain-wrapper\">\n        <div className=\"hat-name\">\n          <h3>{props.hatClaim.hatName}</h3>\n        </div>\n        <div className=\"hat-domain\">\n          <h3>.{props.hatClaim.hatCluster}</h3>\n        </div>\n      </div>\n\n      <div className={'your-hat-issuer'}>Your HAT issuer is</div>\n\n      <div className=\"issuer-logo\">\n        <img src=\"https://cdn.dataswift.io/dataswift/logo/ds-full-dark.svg\" alt={'Dataswift'} />\n      </div>\n\n      <div className=\"drp-image\">\n        <img src={hatDRLogo} alt={'Data rights protected'} />\n      </div>\n\n      <div className={'text-medium'}>\n        This icon appears every time you access your HAT Microserver and whenever you issue instructions to your HAT\n        Microserver. Data rights protection ensures your HAT Microserver is always secure and that the rights to your\n        data are preserved.\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: AppState) => ({\n  hatClaim: state.hatClaim.hatClaim,\n  currentStep: state.hatClaim.currentStep,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch<AnyAction>) =>\n  bindActionCreators(\n    {\n      editHatClaim,\n    },\n    dispatch\n  );\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HatClaimSuccess);\n","import React, { useEffect } from 'react';\nimport './HatClaim.scss';\nimport HatClaimActions from '../HatClaimActions';\nimport HatClaimEmail from '../HatClaimEmail';\nimport HatClaimUrl from '../HatClaimUrl/HatClaimUrl';\nimport HatClaimPassword from '../HatClaimPassword';\nimport HatClaimUrlConfirmation from '../HatClaimConfirmation/HatClaimConfirmation';\nimport { useParams } from 'react-router';\nimport { getParameterByName } from '../../../utils/query-params';\nimport { isEmail } from '../../../utils/validations';\nimport { connect } from 'react-redux';\nimport { AnyAction, bindActionCreators, Dispatch } from 'redux';\nimport { AppState } from '../../../redux/reducer/rootReducer';\nimport {\n  editHatClaim,\n  editHatClaimErrorMessage,\n  editHatClaimPassword,\n  setCurrentStep\n} from '../redux/actions/hatClaimActions';\nimport { loadDynamicZxcvbn } from '../../../utils/load-dynamic-zxcvbn';\nimport { buildClaimRequest, claimHat } from '../hat-claim.service';\nimport HatClaimSuccess from '../HatClaimSuccess/HatClaimSuccess';\nimport { NotificationBanner } from \"../../../components/banners/NotificationBanner/NotificationBanner\";\n\ntype Props = ReturnType<typeof mapStateToProps> & ReturnType<typeof mapDispatchToProps>;\n\nconst HatClaim: React.FC<Props> = props => {\n  const { claimToken } = useParams();\n\n  useEffect(() => {\n    const email = getParameterByName('email');\n    const host = window.location.hostname;\n\n    const hatName = host.substring(0, host.indexOf('.'));\n    const hatCluster = host.substring(host.indexOf('.') + 1);\n\n    if (!!email) {\n      props.editHatClaim('email', email);\n      props.editHatClaim('hatName', hatName);\n      props.editHatClaim('hatCluster', hatCluster);\n\n      loadDynamicZxcvbn(() => {\n        // zxcvbn ready\n      });\n    }\n    // eslint-disable-next-line\n  }, []);\n\n  async function handleSubmission(nextStep: number) {\n    try {\n      props.editHatClaimErrorMessage('');\n      const res = await claimHat(claimToken || '', buildClaimRequest(props.hatClaim));\n\n      if (res.parsedBody) {\n        changeStep(nextStep + 1);\n      }\n    } catch (e) {\n      props.editHatClaimErrorMessage('Something went wrong, please try again');\n      changeStep(nextStep - 1);\n    }\n  }\n\n  const goToLogin = () => {\n    const host = window.location.hostname;\n\n    window.location.href = `https://${ host }/#/user/login`;\n  };\n\n  const changeStep = (newStep: number) => {\n    if (newStep === 1) {\n      if (isEmail(props.hatClaim.email)) {\n        props.setCurrentStep(newStep);\n      }\n    } else if (newStep === 3) {\n      if (props.password.passwordStrength.score >= 2 && props.password.password === props.password.passwordConfirm) {\n        props.setCurrentStep(newStep);\n      }\n    } else if (newStep === 4) {\n      handleSubmission(newStep);\n    } else if (newStep === 5) {\n      props.setCurrentStep(newStep);\n    } else if (newStep === 6) {\n      goToLogin();\n    } else {\n      props.setCurrentStep(newStep);\n    }\n  };\n\n  return (\n    <div className=\"hat-claim flex-column-wrapper\">\n      {props.errorMsg && <NotificationBanner type={'error'} message={props.errorMsg} />}\n      <span className={'flex-spacer-small'} />\n      <HatClaimEmail />\n      <HatClaimUrl />\n      <HatClaimPassword />\n      <HatClaimUrlConfirmation currentStep={props.currentStep} />\n      <HatClaimSuccess />\n\n      <span className={'flex-spacer-large'} />\n      <HatClaimActions currentStep={props.currentStep} setCurrentStep={newStep => changeStep(newStep)} />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: AppState) => ({\n  hatClaim: state.hatClaim.hatClaim,\n  currentStep: state.hatClaim.currentStep,\n  password: state.hatClaim.password,\n  errorMsg: state.hatClaim.errorMsg,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch<AnyAction>) =>\n  bindActionCreators(\n    {\n      editHatClaim,\n      setCurrentStep,\n      editHatClaimPassword,\n      editHatClaimErrorMessage,\n    },\n    dispatch\n  );\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HatClaim);\n","export const loadDynamicZxcvbn = (callback) => {\n  const existingScript = document.getElementById('zxcvbn');\n\n  if (!existingScript) {\n    const script = document.createElement('script');\n    script.src = 'https://cdn.dataswift.io/libs/zxcvbn/4.4.2/zxcvbn.min.js'; // URL for the third-party library being loaded.\n    script.id = 'zxcvbn'; // e.g., googleMaps or stripe\n    script.type = 'text/javascript';\n    script.async = true;\n    document.body.appendChild(script);\n\n    script.onload = () => {\n      if (callback) callback();\n    };\n  }\n\n  if (existingScript && callback) callback();\n};\n","/**\n * Search for a url parameter with a specific id.\n * This function returns the parameter's value or empty.\n *\n * @returns {String}\n */\nexport const getParameterByName = (variable: string): string | null => {\n  const query = window.location.search.substring(1);\n  const vars = query.split('&');\n\n  for (let i = 0; i < vars.length; i++) {\n    const pair = vars[i].split('=');\n    if (pair[0] === variable) {\n      return decodeURIComponent(pair[1]);\n    }\n  }\n  return null;\n};\n\n/**\n * Search for a hash url parameter with a specific id.\n * This function returns the parameter's value or empty.\n *\n * @returns {String}\n */\nexport const getHashParameterByName = (variable: string): string | null => {\n  const query = window.location.hash.split('?');\n  if (query && query.length === 2) {\n    const vars = query[1].split('&');\n\n    for (let i = 0; i < vars.length; i++) {\n      const pair = vars[i].split('=');\n      if (pair[0] === variable) {\n        return decodeURIComponent(pair[1]);\n      }\n    }\n  }\n\n  return null;\n};\n","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","module.exports = __webpack_public_path__ + \"static/media/hat-data-rights.2c50a9f4.png\";"],"sourceRoot":""}